2023-11-27 21:05:00,530 - [INFO] - mysql_service.py[14]: 采集MySQL数据的程序启动.....
2023-11-27 21:05:00,540 - [INFO] - mysql_util.py[28]: 构建完成到localhost:3306的数据库连接...
2023-11-27 21:05:00,564 - [INFO] - mysql_util.py[28]: 构建完成到localhost:3306的数据库连接...
2023-11-27 21:05:00,579 - [INFO] - mysql_util.py[28]: 构建完成到localhost:3306的数据库连接...
2023-11-27 21:05:00,587 - [INFO] - mysql_util.py[48]: 执行查询的SQL语句完成，查询的结果有2条，执行的SQL语句是:show tables
2023-11-27 21:05:00,588 - [INFO] - mysql_util.py[48]: 执行查询的SQL语句完成，查询的结果有3条，执行的SQL语句是:show tables
2023-11-27 21:05:00,589 - [INFO] - mysql_util.py[118]: 数据库:retail中，表barcode已经存在，创建表的操作跳过。
2023-11-27 21:05:00,590 - [INFO] - mysql_util.py[48]: 执行查询的SQL语句完成，查询的结果有2条，执行的SQL语句是:show tables
2023-11-27 21:05:00,592 - [INFO] - mysql_util.py[48]: 执行查询的SQL语句完成，查询的结果有0条，执行的SQL语句是:select time_record from barcode_monitor order by time_record desc limit 1
2023-11-27 21:05:08,276 - [INFO] - mysql_util.py[48]: 执行查询的SQL语句完成，查询的结果有415000条，执行的SQL语句是:select * from sys_barcode order by updateAt
2023-11-27 21:26:00,788 - [INFO] - mysql_service.py[14]: 采集MySQL数据的程序启动.....
2023-11-27 21:26:00,795 - [INFO] - mysql_util.py[28]: 构建完成到localhost:3306的数据库连接...
2023-11-27 21:26:00,812 - [INFO] - mysql_util.py[28]: 构建完成到localhost:3306的数据库连接...
2023-11-27 21:26:00,827 - [INFO] - mysql_util.py[28]: 构建完成到localhost:3306的数据库连接...
2023-11-27 21:26:00,829 - [INFO] - mysql_util.py[48]: 执行查询的SQL语句完成，查询的结果有2条，执行的SQL语句是:show tables
2023-11-27 21:26:00,830 - [INFO] - mysql_util.py[48]: 执行查询的SQL语句完成，查询的结果有2条，执行的SQL语句是:show tables
2023-11-27 21:26:00,933 - [INFO] - mysql_util.py[116]: 在数据库: retail中创建了表: barcode完成。建表语句是: CREATE TABLE barcode(order_id VARCHAR(255) PRIMARY KEY, store_id INT COMMENT '店铺ID', store_name VARCHAR(30) COMMENT '店铺名称', store_status VARCHAR(10) COMMENT '店铺状态(open,close)', store_own_user_id INT COMMENT '店主id', store_own_user_name VARCHAR(50) COMMENT '店主名称', store_own_user_tel VARCHAR(15) COMMENT '店主手机号', store_category VARCHAR(10) COMMENT '店铺类型(normal,test)', store_address VARCHAR(255) COMMENT '店铺地址', store_shop_no VARCHAR(255) COMMENT '店铺第三方支付id号', store_province VARCHAR(10) COMMENT '店铺所在省', store_city VARCHAR(10) COMMENT '店铺所在市', store_district VARCHAR(10) COMMENT '店铺所在行政区', store_gps_name VARCHAR(255) COMMENT '店铺gps名称', store_gps_address VARCHAR(255) COMMENT '店铺gps地址', store_gps_longitude VARCHAR(255) COMMENT '店铺gps经度', store_gps_latitude VARCHAR(255) COMMENT '店铺gps纬度', is_signed TINYINT COMMENT '是否第三方支付签约(0,1)', operator VARCHAR(10) COMMENT '操作员', operator_name VARCHAR(50) COMMENT '操作员名称', face_id VARCHAR(255) COMMENT '顾客面部识别ID', member_id VARCHAR(255) COMMENT '顾客会员ID', store_create_date_ts TIMESTAMP COMMENT '店铺创建时间', origin VARCHAR(255) COMMENT '原始信息(无用)', day_order_seq INT COMMENT '本订单是当日第几单', discount_rate DECIMAL(10, 5) COMMENT '折扣率', discount_type TINYINT COMMENT '折扣类型', discount DECIMAL(10, 5) COMMENT '折扣金额', money_before_whole_discount DECIMAL(10, 5) COMMENT '折扣前总金额', receivable DECIMAL(10, 5) COMMENT '应收金额', erase DECIMAL(10, 5) COMMENT '抹零金额', small_change DECIMAL(10, 5) COMMENT '找零金额', total_no_discount DECIMAL(10, 5) COMMENT '总价格(无折扣)', pay_total DECIMAL(10, 5) COMMENT '付款金额', pay_type VARCHAR(10) COMMENT '付款类型', payment_channel TINYINT COMMENT '付款通道', payment_scenarios VARCHAR(15) COMMENT '付款描述(无用)', product_count INT COMMENT '本单卖出多少商品', date_ts TIMESTAMP COMMENT '订单时间', INDEX (receivable), INDEX (date_ts))
2023-11-27 21:26:00,935 - [INFO] - mysql_util.py[48]: 执行查询的SQL语句完成，查询的结果有2条，执行的SQL语句是:show tables
2023-11-27 21:26:00,936 - [INFO] - mysql_util.py[48]: 执行查询的SQL语句完成，查询的结果有0条，执行的SQL语句是:select time_record from barcode_monitor order by time_record desc limit 1
2023-11-27 21:26:08,201 - [INFO] - mysql_util.py[48]: 执行查询的SQL语句完成，查询的结果有415000条，执行的SQL语句是:select * from sys_barcode order by updateAt
2023-11-27 21:28:27,988 - [INFO] - mysql_service.py[14]: 采集MySQL数据的程序启动.....
2023-11-27 21:28:27,995 - [INFO] - mysql_util.py[28]: 构建完成到localhost:3306的数据库连接...
2023-11-27 21:28:27,996 - [INFO] - mysql_util.py[28]: 构建完成到localhost:3306的数据库连接...
2023-11-27 21:28:27,997 - [INFO] - mysql_util.py[28]: 构建完成到localhost:3306的数据库连接...
2023-11-27 21:28:27,998 - [INFO] - mysql_util.py[48]: 执行查询的SQL语句完成，查询的结果有2条，执行的SQL语句是:show tables
2023-11-27 21:28:27,999 - [INFO] - mysql_util.py[48]: 执行查询的SQL语句完成，查询的结果有2条，执行的SQL语句是:show tables
2023-11-27 21:28:28,026 - [INFO] - mysql_util.py[116]: 在数据库: retail中创建了表: barcode完成。建表语句是: CREATE TABLE barcode(
        `code` varchar(50) PRIMARY KEY COMMENT '商品条码',
        `name` varchar(200) DEFAULT '' COMMENT '商品名称',
        `spec` varchar(200) DEFAULT '' COMMENT '商品规格',
        `trademark` varchar(100) DEFAULT '' COMMENT '商品商标',
        `addr` varchar(200) DEFAULT '' COMMENT '商品产地',
        `units` varchar(50) DEFAULT '' COMMENT '商品单位(个、杯、箱、等)',
        `factory_name` varchar(200) DEFAULT '' COMMENT '生产厂家',
        `trade_price` DECIMAL(50, 5) DEFAULT 0.0 COMMENT '贸易价格(指导进价)',
        `retail_price` DECIMAL(50, 5) DEFAULT 0.0 COMMENT '零售价格(建议卖价)',
        `update_at` timestamp NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '更新时间',
        `wholeunit` varchar(50) DEFAULT NULL COMMENT '大包装单位',
        `wholenum` int(11) DEFAULT NULL COMMENT '大包装内装数量',
        `img` varchar(500) DEFAULT NULL COMMENT '商品图片',
        `src` varchar(20) DEFAULT NULL COMMENT '源信息', 
        INDEX (update_at)
)
2023-11-27 21:28:28,028 - [INFO] - mysql_util.py[48]: 执行查询的SQL语句完成，查询的结果有2条，执行的SQL语句是:show tables
2023-11-27 21:28:28,028 - [INFO] - mysql_util.py[48]: 执行查询的SQL语句完成，查询的结果有0条，执行的SQL语句是:select time_record from barcode_monitor order by time_record desc limit 1
2023-11-27 21:28:35,257 - [INFO] - mysql_util.py[48]: 执行查询的SQL语句完成，查询的结果有415000条，执行的SQL语句是:select * from sys_barcode order by updateAt

2023-11-14 19:22:45,954 - [INFO] - json_service.py[10]: 读取json数据处理，程序开始执行了.....
2023-11-14 19:22:45,954 - [INFO] - json_service.py[14]: 判断json的文件夹，发现有如下文件:['F:/百度网盘下载/4-ETL/Day01/测试/x00', 'F:/百度网盘下载/4-ETL/Day01/测试/x14', 'F:/百度网盘下载/4-ETL/Day01/测试/x21', 'F:/百度网盘下载/4-ETL/Day01/测试/x24']
2023-11-14 19:22:45,961 - [INFO] - mysql_util.py[28]: 构建完成到localhost:3306的数据库连接...
2023-11-14 19:22:45,984 - [INFO] - mysql_util.py[28]: 构建完成到localhost:3306的数据库连接...
2023-11-14 19:22:45,987 - [INFO] - mysql_util.py[48]: 执行查询的SQL语句完成，查询的结果有0条，执行的SQL语句是:show tables
2023-11-14 19:22:46,103 - [INFO] - mysql_util.py[116]: 在数据库: metadata中创建了表: file_monitor完成。建表语句是: CREATE TABLE file_monitor(
    id INT PRIMARY KEY AUTO_INCREMENT,
    file_name VARCHAR(255) UNIQUE NOT NULL COMMENT '被处理的文件名称',
    process_lines INT COMMENT '本文件中有多少条数据被处理',
    process_time TIMESTAMP DEFAULT CURRENT_TIMESTAMP COMMENT '处理时间'
)
2023-11-14 19:22:46,104 - [INFO] - mysql_util.py[48]: 执行查询的SQL语句完成，查询的结果有0条，执行的SQL语句是:select file_name from file_monitor
2023-11-14 19:22:46,104 - [INFO] - json_service.py[28]: 查询mysql，找到有如下文件已经被处理过了：[]
2023-11-14 19:22:46,104 - [INFO] - json_service.py[33]: 经过对比mysql元数据库，找出如下文件供我们处理:['F:/百度网盘下载/4-ETL/Day01/测试/x00', 'F:/百度网盘下载/4-ETL/Day01/测试/x14', 'F:/百度网盘下载/4-ETL/Day01/测试/x21', 'F:/百度网盘下载/4-ETL/Day01/测试/x24']
2023-11-14 19:22:46,163 - [INFO] - mysql_util.py[48]: 执行查询的SQL语句完成，查询的结果有0条，执行的SQL语句是:show tables
2023-11-14 19:22:46,199 - [INFO] - mysql_util.py[116]: 在数据库: retail中创建了表: orders完成。建表语句是: CREATE TABLE orders(order_id VARCHAR(255) PRIMARY KEY, store_id INT COMMENT '店铺ID', store_name VARCHAR(30) COMMENT '店铺名称', store_status VARCHAR(10) COMMENT '店铺状态(open,close)', store_own_user_id INT COMMENT '店主id', store_own_user_name VARCHAR(50) COMMENT '店主名称', store_own_user_tel VARCHAR(15) COMMENT '店主手机号', store_category VARCHAR(10) COMMENT '店铺类型(normal,test)', store_address VARCHAR(255) COMMENT '店铺地址', store_shop_no VARCHAR(255) COMMENT '店铺第三方支付id号', store_province VARCHAR(10) COMMENT '店铺所在省', store_city VARCHAR(10) COMMENT '店铺所在市', store_district VARCHAR(10) COMMENT '店铺所在行政区', store_gps_name VARCHAR(255) COMMENT '店铺gps名称', store_gps_address VARCHAR(255) COMMENT '店铺gps地址', store_gps_longitude VARCHAR(255) COMMENT '店铺gps经度', store_gps_latitude VARCHAR(255) COMMENT '店铺gps纬度', is_signed TINYINT COMMENT '是否第三方支付签约(0,1)', operator VARCHAR(10) COMMENT '操作员', operator_name VARCHAR(50) COMMENT '操作员名称', face_id VARCHAR(255) COMMENT '顾客面部识别ID', member_id VARCHAR(255) COMMENT '顾客会员ID', store_create_date_ts TIMESTAMP COMMENT '店铺创建时间', origin VARCHAR(255) COMMENT '原始信息(无用)', day_order_seq INT COMMENT '本订单是当日第几单', discount_rate DECIMAL(10, 5) COMMENT '折扣率', discount_type TINYINT COMMENT '折扣类型', discount DECIMAL(10, 5) COMMENT '折扣金额', money_before_whole_discount DECIMAL(10, 5) COMMENT '折扣前总金额', receivable DECIMAL(10, 5) COMMENT '应收金额', erase DECIMAL(10, 5) COMMENT '抹零金额', small_change DECIMAL(10, 5) COMMENT '找零金额', total_no_discount DECIMAL(10, 5) COMMENT '总价格(无折扣)', pay_total DECIMAL(10, 5) COMMENT '付款金额', pay_type VARCHAR(10) COMMENT '付款类型', payment_channel TINYINT COMMENT '付款通道', payment_scenarios VARCHAR(15) COMMENT '付款描述(无用)', product_count INT COMMENT '本单卖出多少商品', date_ts TIMESTAMP COMMENT '订单时间', INDEX (receivable), INDEX (date_ts))
2023-11-14 19:22:46,201 - [INFO] - mysql_util.py[48]: 执行查询的SQL语句完成，查询的结果有1条，执行的SQL语句是:show tables
2023-11-14 19:22:46,224 - [INFO] - mysql_util.py[116]: 在数据库: retail中创建了表: orders_detail完成。建表语句是: CREATE TABLE orders_detail(order_id VARCHAR(255) COMMENT '订单ID', barcode VARCHAR(255) COMMENT '商品条码', name VARCHAR(255) COMMENT '商品名称', count INT COMMENT '本单此商品卖出数量', price_per DECIMAL(10, 5) COMMENT '实际售卖单价', retail_price DECIMAL(10, 5) COMMENT '零售建议价', trade_price DECIMAL(10, 5) COMMENT '贸易价格(进货价)', category_id INT COMMENT '商品类别ID', unit_id INT COMMENT '商品单位ID(包、袋、箱、等)', PRIMARY KEY (order_id, barcode))
2023-11-14 19:22:46,925 - [INFO] - mysql_util.py[48]: 执行查询的SQL语句完成，查询的结果有2条，执行的SQL语句是:show tables
2023-11-14 19:22:46,925 - [INFO] - mysql_util.py[118]: 数据库:retail中，表orders已经存在，创建表的操作跳过。
2023-11-14 19:22:46,926 - [INFO] - mysql_util.py[48]: 执行查询的SQL语句完成，查询的结果有2条，执行的SQL语句是:show tables
2023-11-14 19:22:46,926 - [INFO] - mysql_util.py[118]: 数据库:retail中，表orders_detail已经存在，创建表的操作跳过。
2023-11-14 19:22:47,647 - [INFO] - mysql_util.py[48]: 执行查询的SQL语句完成，查询的结果有2条，执行的SQL语句是:show tables
2023-11-14 19:22:47,647 - [INFO] - mysql_util.py[118]: 数据库:retail中，表orders已经存在，创建表的操作跳过。
2023-11-14 19:22:47,648 - [INFO] - mysql_util.py[48]: 执行查询的SQL语句完成，查询的结果有2条，执行的SQL语句是:show tables
2023-11-14 19:22:47,648 - [INFO] - mysql_util.py[118]: 数据库:retail中，表orders_detail已经存在，创建表的操作跳过。
2023-11-14 19:22:48,305 - [INFO] - mysql_util.py[48]: 执行查询的SQL语句完成，查询的结果有2条，执行的SQL语句是:show tables
2023-11-14 19:22:48,305 - [INFO] - mysql_util.py[118]: 数据库:retail中，表orders已经存在，创建表的操作跳过。
2023-11-14 19:22:48,306 - [INFO] - mysql_util.py[48]: 执行查询的SQL语句完成，查询的结果有2条，执行的SQL语句是:show tables
2023-11-14 19:22:48,306 - [INFO] - mysql_util.py[118]: 数据库:retail中，表orders_detail已经存在，创建表的操作跳过。
2023-11-14 19:22:48,900 - [INFO] - json_service.py[133]: 完成了CSV备份文件的写出，写出到了：F:/pyetl-data-logs/output/csv/
2023-11-14 19:22:48,900 - [INFO] - json_service.py[134]: 完成了向MySQL数据库中插入数据的操作。共处理了: 4096条数据
2023-11-14 19:22:48,918 - [INFO] - json_service.py[152]: 读取JSON数据向MySQL插入以及写入CSV备份，程序执行完成.....
